<?xml version="1.0" encoding="utf-8" ?>

<DataOperations xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:noNamespaceSchemaLocation="DataOps.xsd">

    <!-- The configuration applies to any operation in this file. Using global timeout for 5 minutes -->
    <DataConfiguration Timeout="PT5M" AutoTransaction="RepeatableRead" Compatibility="MySQL"/>

    <OperationGroup Name="Registry.Credential">

        <SqlOperation Name="GetBy">
            <TextCommand>
                SELECT *
                FROM `reg_registries_credentials`
                WHERE RegistryId = @RegistryId
                {if:ByWorkspace {and `WorkspaceId` = @WorkspaceId} else {}}
                {if:ByWorkspaceNull {and `WorkspaceId` is null} else {}}
                {if:ByUser {and `UserId` = @UserId} else {}}
                {if:ByUserNull {and `UserId` is null} else {}}
                {if:ByUsername {and `Username` = @Username} else {}}
                {if:ByPullAllowed {and `PullAllowed` = @PullAllowed} else {}}
                {if:ByPushAllowed {and `PushAllowed` = @PushAllowed} else {}}
                ORDER BY `Updated` DESC;
            </TextCommand>
        </SqlOperation>

        <SqlOperation Name="GetExtendedBy">
            <TextCommand>
                SELECT rc.*, r.Name as RegistryName, w.Name as WorkspaceName, u.FullName as UserFullName
                FROM `reg_registries_credentials` rc
                INNER JOIN `reg_registries` r
                ON rc.RegistryId = r.Id
                LEFT JOIN `wspc_workspaces` w
                ON rc.WorkspaceId = w.Id
                LEFT JOIN `idp_users` u
                ON rc.UserId = u.Id
                WHERE rc.RegistryId = @RegistryId
                {if:ByWorkspace {and rc.`WorkspaceId` = @WorkspaceId} else {}}
                {if:ByWorkspaceNull {and rc.`WorkspaceId` is null} else {}}
                {if:ByUser {and rc.`UserId` = @UserId} else {}}
                {if:ByUserNull {and rc.`UserId` is null} else {}}
                {if:ByUsername {and rc.`Username` = @Username} else {}}
                {if:ByPullAllowed {and rc.`PullAllowed` = @PullAllowed} else {}}
                {if:ByPushAllowed {and rc.`PushAllowed` = @PushAllowed} else {}}
                ORDER BY rc.`Updated` DESC;
            </TextCommand>
        </SqlOperation>

        <SqlOperation Name="GetById">
            <TextCommand>
                SELECT * FROM `reg_registries_credentials`
                WHERE `RegistryId` = @RegistryId AND `Id` = @Id;
            </TextCommand>
        </SqlOperation>

        <SqlOperation Name="Create">

            <TextCommand>
                INSERT INTO `reg_registries_credentials`
                (`Id`, `RegistryId`, `WorkspaceId`, `UserId`, `Source`, `Username`, `PasswordEncrypted`, `Email`, `PullAllowed`, `PushAllowed`)
                VALUES
                (@Id, @RegistryId, @WorkspaceId, @UserId, @Source, @Username, @PasswordEncrypted, @Email, @PullAllowed, @PushAllowed);

                SELECT * FROM `reg_registries_credentials`
                WHERE `RegistryId` = @RegistryId AND `Id` = @Id;
            </TextCommand>

        </SqlOperation>

        <SqlOperation Name="UpdateById">
            <TextCommand>
                UPDATE `reg_registries_credentials`
                SET
                `Username` = @Username,
                `Email` = @Email,
                `PullAllowed` = @PullAllowed,
                `PushAllowed` = @PushAllowed
                WHERE
                `RegistryId` = @RegistryId AND `Id` = @Id;

                SELECT * FROM `reg_registries_credentials`
                WHERE `RegistryId` = @RegistryId AND `Id` = @Id;

            </TextCommand>
        </SqlOperation>

        <SqlOperation Name="UpdatePasswordById">
            <TextCommand>
                UPDATE `reg_registries_credentials`
                SET
                `PasswordEncrypted` = @PasswordEncrypted
                WHERE
                `RegistryId` = @RegistryId AND `Id` = @Id;

                SELECT * FROM `reg_registries_credentials`
                WHERE `RegistryId` = @RegistryId AND `Id` = @Id;

            </TextCommand>
        </SqlOperation>

        <SqlOperation Name="DeleteById">
            <TextCommand>
                SELECT * FROM `reg_registries_credentials` WHERE `RegistryId` = @RegistryId AND `Id` = @Id;
                DELETE FROM `reg_registries_credentials` WHERE `RegistryId` = @RegistryId AND `Id` = @Id;
            </TextCommand>
        </SqlOperation>

    </OperationGroup>

</DataOperations>