<?xml version="1.0" encoding="utf-8" ?>

<DataOperations xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:noNamespaceSchemaLocation="DataOps.xsd">

  <!-- The configuration applies to any operation in this file. Using global timeout for 5 minutes -->
  <DataConfiguration Timeout="PT5M" AutoTransaction="RepeatableRead" Compatibility="MySQL"/>

  <OperationGroup Name="Package">

    <SqlOperation Name="GetAll">
      <TextCommand>
        SELECT * FROM `pkg_packages`
        WHERE `WorkspaceId` = @WorkspaceId
        ORDER BY `Updated` Desc;
      </TextCommand>
    </SqlOperation>

    <SqlOperation Name="GetExtendedPageBy">
      <TextCommand>
        SELECT p.*, w.Name as WorkspaceName, u.FullName as UserFullName, r.Name as RegistryName
        FROM `pkg_packages` p 
        INNER JOIN `wspc_workspaces` w
        ON p.WorkspaceId = w.Id 
        INNER JOIN `idp_users` u
        ON p.UserId = u.Id
        INNER JOIN `reg_registries` r
        ON p.RegistryId = r.Id
        WHERE p.`WorkspaceId` = @WorkspaceId
        {if:ByUser {AND p.UserId = @UserId} else {}}
        {if:ByScope {AND p.`Scope` = @Scope} else {}}
        ORDER BY p.`Updated` Desc
        LIMIT @Offset, @Count;  
      </TextCommand>
    </SqlOperation>

    <SqlOperation Name="CountBy">
      <TextCommand>
        SELECT COUNT(p.Id) as TotalCount
        FROM `pkg_packages` p
        WHERE p.`WorkspaceId` = @WorkspaceId
        {if:ByUser {AND p.UserId = @UserId} else {}}
        {if:ByScope {AND p.`Scope` = @Scope} else {}}
        ORDER BY p.`Updated` Desc;
      </TextCommand>
    </SqlOperation>
    
    <SqlOperation Name="GetAllByListingChecksum">
      <TextCommand>
        SELECT * FROM `pkg_packages`
        WHERE `WorkspaceId` = @WorkspaceId AND `ListingChecksum` = @ListingChecksum
        ORDER BY `Updated` Desc;
      </TextCommand>
    </SqlOperation>

    <SqlOperation Name="GetById">
      <TextCommand>
        SELECT * FROM `pkg_packages`
        WHERE `WorkspaceId` = @WorkspaceId AND `Id` = @Id;
      </TextCommand>
    </SqlOperation>

    <SqlOperation Name="GetExtendedById">
      <TextCommand>
        SELECT p.*, w.Name as WorkspaceName, u.FullName as UserFullName, r.Name as RegistryName
        FROM `pkg_packages` p
        INNER JOIN `wspc_workspaces` w
        ON p.WorkspaceId = w.Id
        INNER JOIN `idp_users` u
        ON p.UserId = u.Id
        INNER JOIN `reg_registries` r
        ON p.RegistryId = r.Id
        WHERE p.`WorkspaceId` = @WorkspaceId AND p.Id = @Id
      </TextCommand>
    </SqlOperation>
    
    <SqlOperation Name="Create">

      <TextCommand>
        INSERT INTO `pkg_packages`
        (`Id`, `WorkspaceId`, `UserId`, `Scope`, `ListingChecksum`, `Manifest`, `Runtime`, `Containerfile`, `TemplateReference`, `RegistryId`, `Image`)
        VALUES
        (@Id, @WorkspaceId, @UserId, @Scope, @ListingChecksum, @Manifest, @Runtime, @Containerfile, @TemplateReference, @RegistryId, @Image);

        SELECT * FROM `pkg_packages`
        WHERE `WorkspaceId` = @WorkspaceId AND `Id` = @Id;
      </TextCommand>

    </SqlOperation>

    <SqlOperation Name="DeleteById">
      <TextCommand>
        SELECT * FROM `pkg_packages` WHERE `WorkspaceId` = @WorkspaceId AND `Id` = @Id;
        DELETE FROM `pkg_packages` WHERE `WorkspaceId` = @WorkspaceId AND `Id` = @Id;
      </TextCommand>
    </SqlOperation>
    
  </OperationGroup>

</DataOperations>